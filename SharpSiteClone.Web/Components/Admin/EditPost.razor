@* @page "/admin/post/{urldate:int?}/{slug?}" *@
@attribute [Route(RouteValues.AdminPostEdit)]
@inject IPostRepository PostService;
@inject NavigationManager NavManager
@rendermode InteractiveServer

<PageTitle>@if (string.IsNullOrEmpty(Slug)) {
               <text>New Post</text>
           } else {
               <text>Edit Post</text>
           }
</PageTitle>

<h1>@if (string.IsNullOrEmpty(Slug)) {
        <text>New Post</text>
    } else {
        <text>Edit Post</text>
    }
</h1>

@if (Post is not null)
{
    <div class="form-group">
        <label for="title">Title</label>
        <input type="text" class="form-control" id="title" placeholder="Enter title" @bind="Post.Title" />
    </div>
    
    <div class="form-group">
        <label for="publishedDate">Published Date</label>
        <input type="date" class="form-control" id="publishedDate" @bind="Post.PublishedDate" />
    </div>

    <div class="form-group">
        <label for="content">Content</label>
        <textarea class="form-control" id="content" rows="3" @bind="Post.Content"></textarea>
    </div>
}

<div class="form-group">
    <button type="submit" class="btn btn-primary" @onclick="SavePost">Save</button>
</div>

@code {
    [Parameter] public string? Slug { get; set; }
    [Parameter] public int? UrlDate { get; set; }
    private Post? Post { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Post = (await PostService.GetPost(UrlDate?.ToString() ?? string.Empty, Slug ?? string.Empty)) ?? new Post() {
            Slug= string.Empty,
            Content = string.Empty,
            Title = string.Empty,
            PublishedDate = DateTime.Now
        };
    }

    private async Task SavePost()
    {
        if (string.IsNullOrEmpty(Post!.Slug))
        {
            Post.Slug = Post.GetSlug(Post.Title); 
            await PostService.AddPost(Post);
            NavManager.NavigateTo(RouteValues.AdminPostList);
        }
        else
        {
            await PostService.UpdatePost(Post);
            NavManager.NavigateTo(RouteValues.AdminPostList);
        }
    }
}